// Code generated by dagger-compiler.  Do not edit.
package com.pauselabs.pause.controllers.start;


import dagger.MembersInjector;
import dagger.internal.Binding;
import dagger.internal.Linker;
import java.util.Set;

/**
 * A {@code Binder<OnboardingViewController>} implementation which satisfies
 * Dagger's infrastructure requirements including:
 * 
 * Owning the dependency links between {@code OnboardingViewController} and its
 * dependencies.
 * 
 * Being a {@code Provider<OnboardingViewController>} and handling creation and
 * preparation of object instances.
 * 
 * Being a {@code MembersInjector<OnboardingViewController>} and handling injection
 * of annotated fields.
 */
public final class OnboardingViewController$$InjectAdapter extends Binding<OnboardingViewController>
    implements MembersInjector<OnboardingViewController> {
  private Binding<android.view.LayoutInflater> inflater;
  private Binding<android.content.SharedPreferences> prefs;

  public OnboardingViewController$$InjectAdapter() {
    super(null, "members/com.pauselabs.pause.controllers.start.OnboardingViewController", NOT_SINGLETON, OnboardingViewController.class);
  }

  /**
   * Used internally to link bindings/providers together at run time
   * according to their dependency graph.
   */
  @Override
  @SuppressWarnings("unchecked")
  public void attach(Linker linker) {
    inflater = (Binding<android.view.LayoutInflater>) linker.requestBinding("android.view.LayoutInflater", OnboardingViewController.class);
    prefs = (Binding<android.content.SharedPreferences>) linker.requestBinding("android.content.SharedPreferences", OnboardingViewController.class);
  }

  /**
   * Used internally obtain dependency information, such as for cyclical
   * graph detection.
   */
  @Override
  public void getDependencies(Set<Binding<?>> getBindings, Set<Binding<?>> injectMembersBindings) {
    injectMembersBindings.add(inflater);
    injectMembersBindings.add(prefs);
  }

  /**
   * Injects any {@code @Inject} annotated fields in the given instance,
   * satisfying the contract for {@code Provider<OnboardingViewController>}.
   */
  @Override
  public void injectMembers(OnboardingViewController object) {
    object.inflater = inflater.get();
    object.prefs = prefs.get();
  }
}
